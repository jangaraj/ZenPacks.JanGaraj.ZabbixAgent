<?xml version="1.0"?>
<objects>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'CPU') -->
<object id='/zport/dmd/Devices/rrdTemplates/CPU' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.CPU
</property>
<tomanycont id='datasources'>
<object id='CPU idle time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[${here/id},idle]" -d "system.cpu.util.idle" -c "${here/id}"
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.idle' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='CPU interrupt time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[${here/id},interrupt]" -d "system.cpu.util.interrupt" -c "${here/id}"
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.interrupt' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='CPU iowait time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[${here/id},iowait]" -d "system.cpu.util.iowait" -c "${here/id}"
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.iowait' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='CPU nice time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[${here/id},nice]" -d "system.cpu.util.nice" -c "${here/id}"
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.nice' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='CPU softirq time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[${here/id},softirq]" -d "system.cpu.util.softirq" -c "${here/id}"
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.softirq' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='CPU steal time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[${here/id},steal]" -d "system.cpu.util.steal" -c "${here/id}"
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.steal' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='CPU system time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[${here/id},system]" -d "system.cpu.util.system" -c "${here/id}"
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.system' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='CPU user time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[${here/id},user]" -d "system.cpu.util.user" -c "${here/id}"
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.user' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='CPU utilization' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
100
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='CPU idle time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
7
</property>
<property type="string" id="color" mode="w" >
009900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU idle time_system.cpu.util.idle
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU interrupt time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property type="string" id="color" mode="w" >
009999
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU interrupt time_system.cpu.util.interrupt
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU iowait time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
4
</property>
<property type="string" id="color" mode="w" >
999900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU iowait time_system.cpu.util.iowait
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU nice time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property type="string" id="color" mode="w" >
990099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU nice time_system.cpu.util.nice
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU softirq time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
55FF55
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU softirq time_system.cpu.util.softirq
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU steal time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
FF5555
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU steal time_system.cpu.util.steal
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU system time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
5
</property>
<property type="string" id="color" mode="w" >
990000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU system time_system.cpu.util.system
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU user time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
6
</property>
<property type="string" id="color" mode="w" >
000099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU user time_system.cpu.util.user
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixAppFTPService') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixAppFTPService' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='FTP service performance' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "net.tcp.service.perf[ftp]" -d "net.tcp.service.perf.ftp" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='net.tcp.service.perf.ftp' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='FTP service performance' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
seconds
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='FTP connection time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
FTP service performance_net.tcp.service.perf.ftp
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixAppHTTPSService') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixAppHTTPSService' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='HTTPS service performance' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "net.tcp.service.perf[https]" -d "net.tcp.service.perf.https" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='net.tcp.service.perf.https' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='HTTPS service performance' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
seconds
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='HTTPS connection time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
HTTPS service performance_net.tcp.service.perf.https
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixAppHTTPService') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixAppHTTPService' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='HTTP service performance' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "net.tcp.service.perf[http]" -d "net.tcp.service.perf.http" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='net.tcp.service.perf.http' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='HTTP service performance' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
seconds
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='HTTP connection time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
HTTP service performance_net.tcp.service.perf.http
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixAppIMAPService') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixAppIMAPService' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='IMAP service performance' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "net.tcp.service.perf[imap]" -d "net.tcp.service.perf.imap" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='net.tcp.service.perf.imap' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='IMAP service performance' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
seconds
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='IMAP connection time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
IMAP service performance_net.tcp.service.perf.imap
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixAppLDAPService') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixAppLDAPService' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='LDAP service performance' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "net.tcp.service.perf[ldap]" -d "net.tcp.service.perf.ldap" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='net.tcp.service.perf.ldap' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='LDAP service performance' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
seconds
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='LDAP connection time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
LDAP service performance_net.tcp.service.perf.ldap
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixAppMySQL') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixAppMySQL' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='MySQL begin operations per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "mysql.status[Com_begin]" -d "mysql.status.Com_begin" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='mysql.status.Com_begin' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
</object>
</tomanycont>
</object>
<object id='MySQL bytes received per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The number of bytes received from all clients. 

It requires user parameter mysql.status[*], which is defined in 
userparameter_mysql.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "mysql.status[Bytes_received]" -d "mysql.status.Bytes_received" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='mysql.status.Bytes_received' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The number of bytes received from all clients. 

It requires user parameter mysql.status[*], which is defined in 
userparameter_mysql.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The number of bytes received from all clients. 

It requires user parameter mysql.status[*], which is defined in 
userparameter_mysql.conf.
</property>
</object>
</tomanycont>
</object>
<object id='MySQL bytes sent per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The number of bytes sent to all clients.

It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "mysql.status[Bytes_sent]" -d "mysql.status.Bytes_sent" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='mysql.status.Bytes_sent' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The number of bytes sent to all clients.

It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The number of bytes sent to all clients.

It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
</object>
</tomanycont>
</object>
<object id='MySQL commit operations per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "mysql.status[Com_commit]" -d "mysql.status.Com_commit" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='mysql.status.Com_commit' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
</object>
</tomanycont>
</object>
<object id='MySQL delete operations per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "mysql.status[Com_delete]" -d "mysql.status.Com_delete" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='mysql.status.Com_delete' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
</object>
</tomanycont>
</object>
<object id='MySQL insert operations per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "mysql.status[Com_insert]" -d "mysql.status.Com_insert" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='mysql.status.Com_insert' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
</object>
</tomanycont>
</object>
<object id='MySQL queries per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "mysql.status[Questions]" -d "mysql.status.Questions" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='mysql.status.Questions' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
</object>
</tomanycont>
</object>
<object id='MySQL rollback operations per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "mysql.status[Com_rollback]" -d "mysql.status.Com_rollback" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='mysql.status.Com_rollback' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
</object>
</tomanycont>
</object>
<object id='MySQL select operations per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "mysql.status[Com_select]" -d "mysql.status.Com_select" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='mysql.status.Com_select' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
</object>
</tomanycont>
</object>
<object id='MySQL slow queries' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "mysql.status[Slow_queries]" -d "mysql.status.Slow_queries" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='mysql.status.Slow_queries' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
</object>
</tomanycont>
</object>
<object id='MySQL status' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
It requires user parameter mysql.ping, which is defined in userparameter_mysql.conf.

0 - MySQL server is down
1 - MySQL server is up
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "mysql.ping" -d "mysql.ping" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='mysql.ping' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
It requires user parameter mysql.ping, which is defined in userparameter_mysql.conf.

0 - MySQL server is down
1 - MySQL server is up
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
It requires user parameter mysql.ping, which is defined in userparameter_mysql.conf.

0 - MySQL server is down
1 - MySQL server is up
</property>
</object>
</tomanycont>
</object>
<object id='MySQL update operations per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "mysql.status[Com_update]" -d "mysql.status.Com_update" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='mysql.status.Com_update' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
</object>
</tomanycont>
</object>
<object id='MySQL uptime' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "mysql.status[Uptime]" -d "mysql.status.Uptime" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='mysql.status.Uptime' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
It requires user parameter mysql.status[*], which is defined in userparameter_mysql.conf.
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='MySQL bandwidth' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
Bps
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='MySQL bytes received per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
00AA00
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
MySQL bytes received per second_mysql.status.Bytes_received
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='MySQL bytes sent per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
3333FF
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
MySQL bytes sent per second_mysql.status.Bytes_sent
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='MySQL operations' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
qps
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='MySQL begin operations per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
C8C800
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
MySQL begin operations per second_mysql.status.Com_begin
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='MySQL commit operations per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
006400
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
MySQL commit operations per second_mysql.status.Com_commit
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='MySQL delete operations per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property type="string" id="color" mode="w" >
C80000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
MySQL delete operations per second_mysql.status.Com_delete
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='MySQL insert operations per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property type="string" id="color" mode="w" >
0000EE
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
MySQL insert operations per second_mysql.status.Com_insert
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='MySQL rollback operations per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
4
</property>
<property type="string" id="color" mode="w" >
640000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
MySQL rollback operations per second_mysql.status.Com_rollback
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='MySQL select operations per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
5
</property>
<property type="string" id="color" mode="w" >
00C800
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
MySQL select operations per second_mysql.status.Com_select
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='MySQL update operations per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
6
</property>
<property type="string" id="color" mode="w" >
C800C8
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
MySQL update operations per second_mysql.status.Com_update
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixAppNNTPService') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixAppNNTPService' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='NNTP service performance' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "net.tcp.service.perf[nntp]" -d "net.tcp.service.perf.nntp" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='net.tcp.service.perf.nntp' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='NNTP service performance' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
seconds
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='NNTP connection time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
NNTP service performance_net.tcp.service.perf.nntp
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixAppNTPService') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixAppNTPService' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='NTP service performance' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "net.tcp.service.perf[ntp]" -d "net.tcp.service.perf.ntp" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='net.tcp.service.perf.ntp' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='NTP service performance' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
seconds
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='NTP connection time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
NTP service performance_net.tcp.service.perf.ntp
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixAppPOPService') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixAppPOPService' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='POP service performance' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "net.tcp.service.perf[pop]" -d "net.tcp.service.perf.pop" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='net.tcp.service.perf.pop' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='POP service performance' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
seconds
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='POP connection time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
POP service performance_net.tcp.service.perf.pop
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixAppSMTPService') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixAppSMTPService' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='SMTP service performance' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "net.tcp.service.perf[smtp]" -d "net.tcp.service.perf.smtp" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='net.tcp.service.perf.smtp' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='SMTP service performance' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
seconds
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='SMTP connection time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
SMTP service performance_net.tcp.service.perf.smtp
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixAppSSHService') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixAppSSHService' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='SSH service performance' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "net.tcp.service.perf[ssh]" -d "net.tcp.service.perf.ssh" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='net.tcp.service.perf.ssh' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='SSH service performance' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
seconds
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='SSH connection time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
SSH service performance_net.tcp.service.perf.ssh
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixAppTelnetService') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixAppTelnetService' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='Telnet service performance' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "net.tcp.service.perf[telnet]" -d "net.tcp.service.perf.telnet" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='net.tcp.service.perf.telnet' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='Telnet service performance' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
seconds
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='Telnet connection time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Telnet service performance_net.tcp.service.perf.telnet
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixAppZabbixAgent') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixAppZabbixAgent' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='Agent ping' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The agent always returns 1 for this item. It could be used in combination with nodata() for availability check.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "agent.ping" -d "agent.ping" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='agent.ping' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The agent always returns 1 for this item. It could be used in combination with nodata() for availability check.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The agent always returns 1 for this item. It could be used in combination with nodata() for availability check.
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='Agent ping' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='Agent responded' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Agent ping_agent.ping
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixOSAIX') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixOSAIX' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='Active virtual pages' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[memory,avm]" -d "system.stat.memory.avm" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.memory.avm' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Amount of data transferred' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[disk,bps]" -d "system.stat.disk.bps" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.disk.bps' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Available memory' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Available memory is defined as free+cached+buffers memory.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "vm.memory.size[available]" -d "vm.memory.size.available" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='vm.memory.size.available' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Available memory is defined as free+cached+buffers memory.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Available memory is defined as free+cached+buffers memory.
</property>
</object>
</tomanycont>
</object>
<object id='CPU available physical processors in the shared pool' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[cpu,app]" -d "system.stat.cpu.app" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.cpu.app' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='CPU entitled capacity consumed' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[cpu,ec]" -d "system.stat.cpu.ec" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.cpu.ec' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='CPU idle time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[cpu,id]" -d "system.stat.cpu.id" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.cpu.id' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='CPU iowait time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[cpu,wa]" -d "system.stat.cpu.wa" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.cpu.wa' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='CPU logical processor utilization' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[cpu,lbusy]" -d "system.stat.cpu.lbusy" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.cpu.lbusy' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='CPU number of physical processors consumed' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[cpu,pc]" -d "system.stat.cpu.pc" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.cpu.pc' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='CPU system time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[cpu,sy]" -d "system.stat.cpu.sy" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.cpu.sy' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='CPU user time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[cpu,us]" -d "system.stat.cpu.us" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.cpu.us' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Context switches per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.switches" -d "system.cpu.switches" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.switches' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Device interrupts' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[faults,in]" -d "system.stat.faults.in" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.faults.in' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='File page-ins per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[page,fi]" -d "system.stat.page.fi" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.page.fi' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='File page-outs per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[page,fo]" -d "system.stat.page.fo" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.page.fo' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Free real memory' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[memory,fre]" -d "system.stat.memory.fre" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.memory.fre' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Interrupts per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.intr" -d "system.cpu.intr" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.intr' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Kernel thread context switches' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[faults,cs]" -d "system.stat.faults.cs" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.faults.cs' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Length of the run queue' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[kthr,r]" -d "system.stat.kthr.r" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.kthr.r' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Length of the swap queue' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[kthr,b]" -d "system.stat.kthr.b" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.kthr.b' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Number of logged in users' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Number of users who are currently logged in.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.users.num" -d "system.users.num" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.users.num' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Number of users who are currently logged in.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Number of users who are currently logged in.
</property>
</object>
</tomanycont>
</object>
<object id='Number of processes' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Total number of processes in any state.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "proc.num[]" -d "proc.num" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='proc.num' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Total number of processes in any state.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Total number of processes in any state.
</property>
</object>
</tomanycont>
</object>
<object id='Number of running processes' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Number of processes in running state.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "proc.num[,,run]" -d "proc.num.run" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='proc.num.run' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Number of processes in running state.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Number of processes in running state.
</property>
</object>
</tomanycont>
</object>
<object id='Number of transfers' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[disk,tps]" -d "system.stat.disk.tps" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.disk.tps' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Pages freed (page replacement)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[page,fr]" -d "system.stat.page.fr" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.page.fr' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Pages paged in from paging space' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[page,pi]" -d "system.stat.page.pi" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.page.pi' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Pages paged out to paging space' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[page,po]" -d "system.stat.page.po" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.page.po' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Pages scanned by page-replacement algorithm' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[page,sr]" -d "system.stat.page.sr" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.page.sr' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (1 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg1]" -d "system.cpu.load.percpu.avg1" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg1' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (15 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg15]" -d "system.cpu.load.percpu.avg15" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg15' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (5 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg5]" -d "system.cpu.load.percpu.avg5" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg5' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='Processor units is entitled to receive' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[ent]" -d "system.stat.ent" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.ent' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='System calls' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.stat[faults,sy]" -d "system.stat.faults.sy" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.stat.faults.sy' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='System uptime' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.uptime" -d "system.uptime" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.uptime' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Total memory' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "vm.memory.size[total]" -d "vm.memory.size.total" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='vm.memory.size.total' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='CPU jumps' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='Context switches per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
009900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Context switches per second_system.cpu.switches
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Interrupts per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
000099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Interrupts per second_system.cpu.intr
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='CPU load' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
2
</property>
<tomanycont id='graphPoints'>
<object id='Processor load (1 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
009900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (1 min average per core)_system.cpu.load.percpu.avg1
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Processor load (15 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property type="string" id="color" mode="w" >
990000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (15 min average per core)_system.cpu.load.percpu.avg15
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Processor load (5 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
000099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (5 min average per core)_system.cpu.load.percpu.avg5
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='CPU utilization' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
100
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='CPU entitled capacity consumed' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
009999
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU entitled capacity consumed_system.stat.cpu.ec
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU idle time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
5
</property>
<property type="string" id="color" mode="w" >
009900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU idle time_system.stat.cpu.id
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU iowait time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property type="string" id="color" mode="w" >
999900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU iowait time_system.stat.cpu.wa
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU number of physical processors consumed' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
990099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU number of physical processors consumed_system.stat.cpu.pc
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU system time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property type="string" id="color" mode="w" >
990000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU system time_system.stat.cpu.sy
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU user time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
4
</property>
<property type="string" id="color" mode="w" >
000099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU user time_system.stat.cpu.us
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Memory usage' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
B
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
3
</property>
<tomanycont id='graphPoints'>
<object id='Available memory' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
00C800
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Available memory_vm.memory.size.available
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Free real memory' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Free real memory_system.stat.memory.fre
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Total memory' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
DD0000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Total memory_vm.memory.size.total
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Processes and users' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
5
</property>
<tomanycont id='graphPoints'>
<object id='Number of logged in users' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Number of logged in users_system.users.num
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Number of processes' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Number of processes_proc.num
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Number of running processes' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Number of running processes_proc.num.run
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Queues' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
4
</property>
<tomanycont id='graphPoints'>
<object id='Length of the run queue' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Length of the run queue_system.stat.kthr.r
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Length of the swap queue' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Length of the swap queue_system.stat.kthr.b
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='System uptime' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
6
</property>
<tomanycont id='graphPoints'>
<object id='System uptime' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
System uptime_system.uptime
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixOSFreeBSD') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixOSFreeBSD' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='Available memory' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Available memory is defined as free+cached+buffers memory.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "vm.memory.size[available]" -d "vm.memory.size.available" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='vm.memory.size.available' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Available memory is defined as free+cached+buffers memory.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Available memory is defined as free+cached+buffers memory.
</property>
</object>
</tomanycont>
</object>
<object id='CPU idle time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The time the CPU has spent doing nothing.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,idle]" -d "system.cpu.util.idle" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.idle' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The time the CPU has spent doing nothing.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The time the CPU has spent doing nothing.
</property>
</object>
</tomanycont>
</object>
<object id='CPU interrupt time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The amount of time the CPU has been servicing hardware interrupts.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,interrupt]" -d "system.cpu.util.interrupt" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.interrupt' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The amount of time the CPU has been servicing hardware interrupts.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The amount of time the CPU has been servicing hardware interrupts.
</property>
</object>
</tomanycont>
</object>
<object id='CPU nice time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The time the CPU has spent running users' proccess that have been niced.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,nice]" -d "system.cpu.util.nice" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.nice' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The time the CPU has spent running users' proccess that have been niced.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The time the CPU has spent running users' proccess that have been niced.
</property>
</object>
</tomanycont>
</object>
<object id='CPU system time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The time the CPU has spent running the kernel and its processes.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,system]" -d "system.cpu.util.system" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.system' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The time the CPU has spent running the kernel and its processes.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The time the CPU has spent running the kernel and its processes.
</property>
</object>
</tomanycont>
</object>
<object id='CPU user time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The time the CPU has spent running users' processes that are not niced.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,user]" -d "system.cpu.util.user" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.user' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The time the CPU has spent running users' processes that are not niced.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The time the CPU has spent running users' processes that are not niced.
</property>
</object>
</tomanycont>
</object>
<object id='Context switches per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.switches" -d "system.cpu.switches" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.switches' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Free swap space' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.swap.size[,free]" -d "system.swap.size.free" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.swap.size.free' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Interrupts per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.intr" -d "system.cpu.intr" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.intr' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Maximum number of opened files' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "kernel.maxfiles" -d "kernel.maxfiles" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='kernel.maxfiles' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
</object>
</tomanycont>
</object>
<object id='Maximum number of processes' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "kernel.maxproc" -d "kernel.maxproc" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='kernel.maxproc' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
</object>
</tomanycont>
</object>
<object id='Number of logged in users' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Number of users who are currently logged in.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.users.num" -d "system.users.num" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.users.num' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Number of users who are currently logged in.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Number of users who are currently logged in.
</property>
</object>
</tomanycont>
</object>
<object id='Number of processes' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Total number of processes in any state.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "proc.num[]" -d "proc.num" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='proc.num' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Total number of processes in any state.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Total number of processes in any state.
</property>
</object>
</tomanycont>
</object>
<object id='Number of running processes' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Number of processes in running state.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "proc.num[,,run]" -d "proc.num.run" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='proc.num.run' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Number of processes in running state.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Number of processes in running state.
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (1 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg1]" -d "system.cpu.load.percpu.avg1" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg1' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (15 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg15]" -d "system.cpu.load.percpu.avg15" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg15' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (5 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg5]" -d "system.cpu.load.percpu.avg5" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg5' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='System uptime' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.uptime" -d "system.uptime" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.uptime' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Total memory' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "vm.memory.size[total]" -d "vm.memory.size.total" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='vm.memory.size.total' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Total swap space' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.swap.size[,total]" -d "system.swap.size.total" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.swap.size.total' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='CPU jumps' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='Context switches per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
009900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Context switches per second_system.cpu.switches
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Interrupts per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
000099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Interrupts per second_system.cpu.intr
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='CPU load' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
2
</property>
<tomanycont id='graphPoints'>
<object id='Processor load (1 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
009900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (1 min average per core)_system.cpu.load.percpu.avg1
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Processor load (15 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property type="string" id="color" mode="w" >
990000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (15 min average per core)_system.cpu.load.percpu.avg15
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Processor load (5 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
000099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (5 min average per core)_system.cpu.load.percpu.avg5
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='CPU utilization' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
%
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
100
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='CPU idle time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
4
</property>
<property type="string" id="color" mode="w" >
009900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU idle time_system.cpu.util.idle
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU interrupt time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
009999
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU interrupt time_system.cpu.util.interrupt
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU nice time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
990099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU nice time_system.cpu.util.nice
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU system time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property type="string" id="color" mode="w" >
990000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU system time_system.cpu.util.system
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU user time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property type="string" id="color" mode="w" >
000099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU user time_system.cpu.util.user
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Files and processes and users' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
True
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
5
</property>
<tomanycont id='graphPoints'>
<object id='Maximum number of opened files' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Maximum number of opened files_kernel.maxfiles
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Maximum number of processes' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Maximum number of processes_kernel.maxproc
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Number of logged in users' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
4
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Number of logged in users_system.users.num
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Number of processes' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Number of processes_proc.num
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Number of running processes' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Number of running processes_proc.num.run
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Memory usage' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
B
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
3
</property>
<tomanycont id='graphPoints'>
<object id='Available memory' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
00C800
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Available memory_vm.memory.size.available
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Total memory' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
DD0000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Total memory_vm.memory.size.total
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Swap usage' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
B
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
4
</property>
<tomanycont id='graphPoints'>
<object id='Free swap space' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
00AA00
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Free swap space_system.swap.size.free
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Total swap space' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
AA0000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Total swap space_system.swap.size.total
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='System uptime' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
6
</property>
<tomanycont id='graphPoints'>
<object id='System uptime' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
System uptime_system.uptime
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixOSHP-UX') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixOSHP-UX' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='Available memory' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Available memory is defined as free+cached+buffers memory.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "vm.memory.size[available]" -d "vm.memory.size.available" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='vm.memory.size.available' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Available memory is defined as free+cached+buffers memory.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Available memory is defined as free+cached+buffers memory.
</property>
</object>
</tomanycont>
</object>
<object id='CPU idle time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The time the CPU has spent doing nothing.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,idle]" -d "system.cpu.util.idle" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.idle' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The time the CPU has spent doing nothing.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The time the CPU has spent doing nothing.
</property>
</object>
</tomanycont>
</object>
<object id='CPU nice time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The time the CPU has spent running users' proccess that have been niced.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,nice]" -d "system.cpu.util.nice" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.nice' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The time the CPU has spent running users' proccess that have been niced.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The time the CPU has spent running users' proccess that have been niced.
</property>
</object>
</tomanycont>
</object>
<object id='CPU system time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The time the CPU has spent running the kernel and its processes.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,system]" -d "system.cpu.util.system" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.system' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The time the CPU has spent running the kernel and its processes.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The time the CPU has spent running the kernel and its processes.
</property>
</object>
</tomanycont>
</object>
<object id='CPU user time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The time the CPU has spent running users' processes that are not niced.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,user]" -d "system.cpu.util.user" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.user' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The time the CPU has spent running users' processes that are not niced.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The time the CPU has spent running users' processes that are not niced.
</property>
</object>
</tomanycont>
</object>
<object id='Number of logged in users' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Number of users who are currently logged in.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.users.num" -d "system.users.num" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.users.num' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Number of users who are currently logged in.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Number of users who are currently logged in.
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (1 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg1]" -d "system.cpu.load.percpu.avg1" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg1' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (15 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg15]" -d "system.cpu.load.percpu.avg15" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg15' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (5 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg5]" -d "system.cpu.load.percpu.avg5" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg5' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='Total memory' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "vm.memory.size[total]" -d "vm.memory.size.total" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='vm.memory.size.total' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='CPU load' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='Processor load (1 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
009900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (1 min average per core)_system.cpu.load.percpu.avg1
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Processor load (15 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property type="string" id="color" mode="w" >
990000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (15 min average per core)_system.cpu.load.percpu.avg15
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Processor load (5 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
000099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (5 min average per core)_system.cpu.load.percpu.avg5
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='CPU utilization' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
%
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
100
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='CPU idle time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property type="string" id="color" mode="w" >
009900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU idle time_system.cpu.util.idle
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU nice time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
990099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU nice time_system.cpu.util.nice
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU system time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
990000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU system time_system.cpu.util.system
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU user time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property type="string" id="color" mode="w" >
000099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU user time_system.cpu.util.user
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Memory usage' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
B
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
2
</property>
<tomanycont id='graphPoints'>
<object id='Available memory' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
00C800
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Available memory_vm.memory.size.available
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Total memory' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
DD0000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Total memory_vm.memory.size.total
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Number of logged in users' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
3
</property>
<tomanycont id='graphPoints'>
<object id='Number of logged in users' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Number of logged in users_system.users.num
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixOSLinux') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixOSLinux' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='Available memory' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Available memory is defined as free+cached+buffers memory.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "vm.memory.size[available]" -d "vm.memory.size.available" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='vm.memory.size.available' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Available memory is defined as free+cached+buffers memory.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Available memory is defined as free+cached+buffers memory.
</property>
</object>
</tomanycont>
</object>
<object id='CPU idle time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The time the CPU has spent doing nothing.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,idle]" -d "system.cpu.util.idle" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.idle' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The time the CPU has spent doing nothing.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The time the CPU has spent doing nothing.
</property>
</object>
</tomanycont>
</object>
<object id='CPU interrupt time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The amount of time the CPU has been servicing hardware interrupts.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,interrupt]" -d "system.cpu.util.interrupt" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.interrupt' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The amount of time the CPU has been servicing hardware interrupts.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The amount of time the CPU has been servicing hardware interrupts.
</property>
</object>
</tomanycont>
</object>
<object id='CPU iowait time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Amount of time the CPU has been waiting for I/O to complete.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,iowait]" -d "system.cpu.util.iowait" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.iowait' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Amount of time the CPU has been waiting for I/O to complete.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Amount of time the CPU has been waiting for I/O to complete.
</property>
</object>
</tomanycont>
</object>
<object id='CPU nice time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The time the CPU has spent running users' proccess that have been niced.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,nice]" -d "system.cpu.util.nice" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.nice' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The time the CPU has spent running users' proccess that have been niced.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The time the CPU has spent running users' proccess that have been niced.
</property>
</object>
</tomanycont>
</object>
<object id='CPU softirq time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The amount of time the CPU has been servicing software interrupts.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,softirq]" -d "system.cpu.util.softirq" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.softirq' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The amount of time the CPU has been servicing software interrupts.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The amount of time the CPU has been servicing software interrupts.
</property>
</object>
</tomanycont>
</object>
<object id='CPU steal time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The amount of CPU 'stolen' from this virtual machine by the hypervisor for other tasks (such as running another virtual machine).
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,steal]" -d "system.cpu.util.steal" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.steal' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The amount of CPU 'stolen' from this virtual machine by the hypervisor for other tasks (such as running another virtual machine).
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The amount of CPU 'stolen' from this virtual machine by the hypervisor for other tasks (such as running another virtual machine).
</property>
</object>
</tomanycont>
</object>
<object id='CPU system time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The time the CPU has spent running the kernel and its processes.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,system]" -d "system.cpu.util.system" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.system' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The time the CPU has spent running the kernel and its processes.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The time the CPU has spent running the kernel and its processes.
</property>
</object>
</tomanycont>
</object>
<object id='CPU user time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The time the CPU has spent running users' processes that are not niced.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,user]" -d "system.cpu.util.user" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.user' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The time the CPU has spent running users' processes that are not niced.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The time the CPU has spent running users' processes that are not niced.
</property>
</object>
</tomanycont>
</object>
<object id='Context switches per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.switches" -d "system.cpu.switches" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.switches' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Free swap space' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.swap.size[,free]" -d "system.swap.size.free" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.swap.size.free' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Interrupts per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.intr" -d "system.cpu.intr" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.intr' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Maximum number of opened files' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "kernel.maxfiles" -d "kernel.maxfiles" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='kernel.maxfiles' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
</object>
</tomanycont>
</object>
<object id='Maximum number of processes' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "kernel.maxproc" -d "kernel.maxproc" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='kernel.maxproc' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
</object>
</tomanycont>
</object>
<object id='Number of logged in users' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Number of users who are currently logged in.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.users.num" -d "system.users.num" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.users.num' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Number of users who are currently logged in.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Number of users who are currently logged in.
</property>
</object>
</tomanycont>
</object>
<object id='Number of processes' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Total number of processes in any state.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "proc.num[]" -d "proc.num" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='proc.num' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Total number of processes in any state.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Total number of processes in any state.
</property>
</object>
</tomanycont>
</object>
<object id='Number of running processes' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Number of processes in running state.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "proc.num[,,run]" -d "proc.num.run" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='proc.num.run' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Number of processes in running state.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Number of processes in running state.
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (1 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg1]" -d "system.cpu.load.percpu.avg1" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg1' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (15 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg15]" -d "system.cpu.load.percpu.avg15" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg15' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (5 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg5]" -d "system.cpu.load.percpu.avg5" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg5' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='Swap in' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.swap.in[,pages]" -d "system.swap.in.pages" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.swap.in.pages' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Swap out' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.swap.out[,pages]" -d "system.swap.out.pages" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.swap.out.pages' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='System uptime' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.uptime" -d "system.uptime" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.uptime' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Total memory' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "vm.memory.size[total]" -d "vm.memory.size.total" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='vm.memory.size.total' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Total swap space' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.swap.size[,total]" -d "system.swap.size.total" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.swap.size.total' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='CPU jumps' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
2
</property>
<tomanycont id='graphPoints'>
<object id='Context switches per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
009900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Context switches per second_system.cpu.switches
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Interrupts per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
000099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Interrupts per second_system.cpu.intr
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='CPU load' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='Processor load (1 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
009900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (1 min average per core)_system.cpu.load.percpu.avg1
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Processor load (15 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property type="string" id="color" mode="w" >
990000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (15 min average per core)_system.cpu.load.percpu.avg15
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Processor load (5 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
000099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (5 min average per core)_system.cpu.load.percpu.avg5
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='CPU utilization' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
%
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
100
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='CPU idle time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
7
</property>
<property type="string" id="color" mode="w" >
009900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU idle time_system.cpu.util.idle
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU interrupt time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property type="string" id="color" mode="w" >
009999
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU interrupt time_system.cpu.util.interrupt
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU iowait time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
4
</property>
<property type="string" id="color" mode="w" >
999900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU iowait time_system.cpu.util.iowait
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU nice time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property type="string" id="color" mode="w" >
990099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU nice time_system.cpu.util.nice
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU softirq time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
55FF55
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU softirq time_system.cpu.util.softirq
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU steal time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
FF5555
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU steal time_system.cpu.util.steal
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU system time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
5
</property>
<property type="string" id="color" mode="w" >
990000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU system time_system.cpu.util.system
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU user time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
6
</property>
<property type="string" id="color" mode="w" >
000099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU user time_system.cpu.util.user
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Files and processes and users' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
True
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
6
</property>
<tomanycont id='graphPoints'>
<object id='Maximum number of opened files' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Maximum number of opened files_kernel.maxfiles
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Maximum number of processes' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Maximum number of processes_kernel.maxproc
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Number of logged in users' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
4
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Number of logged in users_system.users.num
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Number of processes' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Number of processes_proc.num
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Number of running processes' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Number of running processes_proc.num.run
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Memory usage' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
B
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
5
</property>
<tomanycont id='graphPoints'>
<object id='Available memory' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
00C800
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Available memory_vm.memory.size.available
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Total memory' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
DD0000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Total memory_vm.memory.size.total
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Swap usage' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
B
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
4
</property>
<tomanycont id='graphPoints'>
<object id='Free swap space' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
00AA00
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Free swap space_system.swap.size.free
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Total swap space' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
AA0000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Total swap space_system.swap.size.total
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Swaping' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
pages
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
3
</property>
<tomanycont id='graphPoints'>
<object id='Swap in' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Swap in_system.swap.in.pages
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Swap out' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Swap out_system.swap.out.pages
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='System uptime' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
seconds
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
7
</property>
<tomanycont id='graphPoints'>
<object id='System uptime' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
System uptime_system.uptime
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixOSMacOSX') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixOSMacOSX' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='Available memory' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Available memory is defined as free+cached+buffers memory.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "vm.memory.size[available]" -d "vm.memory.size.available" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='vm.memory.size.available' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Available memory is defined as free+cached+buffers memory.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Available memory is defined as free+cached+buffers memory.
</property>
</object>
</tomanycont>
</object>
<object id='Incoming network traffic on en0' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "net.if.in[en0]" -d "net.if.in.en0" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='net.if.in.en0' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Maximum number of opened files' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "kernel.maxfiles" -d "kernel.maxfiles" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='kernel.maxfiles' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
</object>
</tomanycont>
</object>
<object id='Maximum number of processes' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "kernel.maxproc" -d "kernel.maxproc" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='kernel.maxproc' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
</object>
</tomanycont>
</object>
<object id='Number of logged in users' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Number of users who are currently logged in.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.users.num" -d "system.users.num" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.users.num' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Number of users who are currently logged in.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Number of users who are currently logged in.
</property>
</object>
</tomanycont>
</object>
<object id='Outgoing network traffic on en0' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "net.if.out[en0]" -d "net.if.out.en0" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='net.if.out.en0' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (1 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg1]" -d "system.cpu.load.percpu.avg1" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg1' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (15 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg15]" -d "system.cpu.load.percpu.avg15" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg15' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (5 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg5]" -d "system.cpu.load.percpu.avg5" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg5' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='System uptime' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.uptime" -d "system.uptime" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.uptime' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Total memory' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "vm.memory.size[total]" -d "vm.memory.size.total" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='vm.memory.size.total' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='CPU load' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='Processor load (1 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
009900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (1 min average per core)_system.cpu.load.percpu.avg1
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Processor load (15 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property type="string" id="color" mode="w" >
990000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (15 min average per core)_system.cpu.load.percpu.avg15
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Processor load (5 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
000099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (5 min average per core)_system.cpu.load.percpu.avg5
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Files and processes and users' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
True
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
3
</property>
<tomanycont id='graphPoints'>
<object id='Maximum number of opened files' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Maximum number of opened files_kernel.maxfiles
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Maximum number of processes' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Maximum number of processes_kernel.maxproc
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Number of logged in users' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Number of logged in users_system.users.num
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Memory usage' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
B
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='Available memory' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
00C800
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Available memory_vm.memory.size.available
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Total memory' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
DD0000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Total memory_vm.memory.size.total
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Network traffic on en0' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
bps
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
2
</property>
<tomanycont id='graphPoints'>
<object id='Incoming network traffic on en0' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
00AA00
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Incoming network traffic on en0_net.if.in.en0
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Outgoing network traffic on en0' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
3333FF
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Outgoing network traffic on en0_net.if.out.en0
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='System uptime' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
seconds
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
4
</property>
<tomanycont id='graphPoints'>
<object id='System uptime' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
System uptime_system.uptime
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixOSOpenBSD') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixOSOpenBSD' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='Available memory' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Available memory is defined as free+cached+buffers memory.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "vm.memory.size[available]" -d "vm.memory.size.available" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='vm.memory.size.available' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Available memory is defined as free+cached+buffers memory.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Available memory is defined as free+cached+buffers memory.
</property>
</object>
</tomanycont>
</object>
<object id='CPU idle time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The time the CPU has spent doing nothing.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,idle]" -d "system.cpu.util.idle" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.idle' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The time the CPU has spent doing nothing.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The time the CPU has spent doing nothing.
</property>
</object>
</tomanycont>
</object>
<object id='CPU interrupt time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The amount of time the CPU has been servicing hardware interrupts.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,interrupt]" -d "system.cpu.util.interrupt" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.interrupt' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The amount of time the CPU has been servicing hardware interrupts.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The amount of time the CPU has been servicing hardware interrupts.
</property>
</object>
</tomanycont>
</object>
<object id='CPU nice time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The time the CPU has spent running users' proccess that have been niced.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,nice]" -d "system.cpu.util.nice" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.nice' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The time the CPU has spent running users' proccess that have been niced.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The time the CPU has spent running users' proccess that have been niced.
</property>
</object>
</tomanycont>
</object>
<object id='CPU system time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The time the CPU has spent running the kernel and its processes.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,system]" -d "system.cpu.util.system" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.system' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The time the CPU has spent running the kernel and its processes.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The time the CPU has spent running the kernel and its processes.
</property>
</object>
</tomanycont>
</object>
<object id='CPU user time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The time the CPU has spent running users' processes that are not niced.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,user]" -d "system.cpu.util.user" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.user' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The time the CPU has spent running users' processes that are not niced.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The time the CPU has spent running users' processes that are not niced.
</property>
</object>
</tomanycont>
</object>
<object id='Context switches per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.switches" -d "system.cpu.switches" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.switches' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Free swap space' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.swap.size[,free]" -d "system.swap.size.free" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.swap.size.free' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Interrupts per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.intr" -d "system.cpu.intr" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.intr' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Maximum number of opened files' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "kernel.maxfiles" -d "kernel.maxfiles" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='kernel.maxfiles' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
</object>
</tomanycont>
</object>
<object id='Maximum number of processes' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "kernel.maxproc" -d "kernel.maxproc" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='kernel.maxproc' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
</object>
</tomanycont>
</object>
<object id='Number of logged in users' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Number of users who are currently logged in.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.users.num" -d "system.users.num" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.users.num' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Number of users who are currently logged in.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Number of users who are currently logged in.
</property>
</object>
</tomanycont>
</object>
<object id='Number of processes' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Total number of processes in any state.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "proc.num[]" -d "proc.num" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='proc.num' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Total number of processes in any state.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Total number of processes in any state.
</property>
</object>
</tomanycont>
</object>
<object id='Number of running processes' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Number of processes in running state.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "proc.num[,,run]" -d "proc.num.run" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='proc.num.run' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Number of processes in running state.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Number of processes in running state.
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (1 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg1]" -d "system.cpu.load.percpu.avg1" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg1' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (15 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg15]" -d "system.cpu.load.percpu.avg15" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg15' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (5 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg5]" -d "system.cpu.load.percpu.avg5" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg5' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='System uptime' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.uptime" -d "system.uptime" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.uptime' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Total memory' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "vm.memory.size[total]" -d "vm.memory.size.total" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='vm.memory.size.total' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Total swap space' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.swap.size[,total]" -d "system.swap.size.total" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.swap.size.total' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='CPU jumps' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='Context switches per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
009900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Context switches per second_system.cpu.switches
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Interrupts per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
000099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Interrupts per second_system.cpu.intr
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='CPU load' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
2
</property>
<tomanycont id='graphPoints'>
<object id='Processor load (1 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
009900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (1 min average per core)_system.cpu.load.percpu.avg1
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Processor load (15 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property type="string" id="color" mode="w" >
990000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (15 min average per core)_system.cpu.load.percpu.avg15
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Processor load (5 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
000099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (5 min average per core)_system.cpu.load.percpu.avg5
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='CPU utilization' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
%
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
100
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='CPU idle time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
4
</property>
<property type="string" id="color" mode="w" >
009900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU idle time_system.cpu.util.idle
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU interrupt time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
009999
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU interrupt time_system.cpu.util.interrupt
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU nice time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
990099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU nice time_system.cpu.util.nice
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU system time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property type="string" id="color" mode="w" >
990000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU system time_system.cpu.util.system
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU user time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property type="string" id="color" mode="w" >
000099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU user time_system.cpu.util.user
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Files and processes and users' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
True
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
5
</property>
<tomanycont id='graphPoints'>
<object id='Maximum number of opened files' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Maximum number of opened files_kernel.maxfiles
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Maximum number of processes' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Maximum number of processes_kernel.maxproc
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Number of logged in users' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
4
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Number of logged in users_system.users.num
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Number of processes' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Number of processes_proc.num
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Number of running processes' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Number of running processes_proc.num.run
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Memory usage' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
B
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
4
</property>
<tomanycont id='graphPoints'>
<object id='Available memory' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
00C800
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Available memory_vm.memory.size.available
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Total memory' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
DD0000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Total memory_vm.memory.size.total
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Swap usage' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
B
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
3
</property>
<tomanycont id='graphPoints'>
<object id='Free swap space' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
00AA00
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Free swap space_system.swap.size.free
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Total swap space' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
AA0000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Total swap space_system.swap.size.total
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='System uptime' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
seconds
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
6
</property>
<tomanycont id='graphPoints'>
<object id='System uptime' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
System uptime_system.uptime
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixOSSolaris') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixOSSolaris' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='Available memory' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Available memory is defined as free+cached+buffers memory.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "vm.memory.size[available]" -d "vm.memory.size.available" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='vm.memory.size.available' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Available memory is defined as free+cached+buffers memory.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Available memory is defined as free+cached+buffers memory.
</property>
</object>
</tomanycont>
</object>
<object id='CPU idle time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The time the CPU has spent doing nothing.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,idle]" -d "system.cpu.util.idle" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.idle' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The time the CPU has spent doing nothing.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The time the CPU has spent doing nothing.
</property>
</object>
</tomanycont>
</object>
<object id='CPU iowait time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Amount of time the CPU has been waiting for I/O to complete.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,iowait]" -d "system.cpu.util.iowait" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.iowait' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Amount of time the CPU has been waiting for I/O to complete.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Amount of time the CPU has been waiting for I/O to complete.
</property>
</object>
</tomanycont>
</object>
<object id='CPU system time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The time the CPU has spent running the kernel and its processes.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,system]" -d "system.cpu.util.system" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.system' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The time the CPU has spent running the kernel and its processes.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The time the CPU has spent running the kernel and its processes.
</property>
</object>
</tomanycont>
</object>
<object id='CPU user time' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The time the CPU has spent running users' processes that are not niced.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.util[,user]" -d "system.cpu.util.user" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.util.user' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The time the CPU has spent running users' processes that are not niced.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The time the CPU has spent running users' processes that are not niced.
</property>
</object>
</tomanycont>
</object>
<object id='Context switches per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.switches" -d "system.cpu.switches" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.switches' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Free swap space' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.swap.size[,free]" -d "system.swap.size.free" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.swap.size.free' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Interrupts per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.intr" -d "system.cpu.intr" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.intr' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
COUNTER
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Maximum number of processes' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "kernel.maxproc" -d "kernel.maxproc" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='kernel.maxproc' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
It could be increased by using sysctrl utility or modifying file /etc/sysctl.conf.
</property>
</object>
</tomanycont>
</object>
<object id='Number of logged in users' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Number of users who are currently logged in.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.users.num" -d "system.users.num" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.users.num' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Number of users who are currently logged in.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Number of users who are currently logged in.
</property>
</object>
</tomanycont>
</object>
<object id='Number of processes' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Total number of processes in any state.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "proc.num[]" -d "proc.num" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='proc.num' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Total number of processes in any state.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Total number of processes in any state.
</property>
</object>
</tomanycont>
</object>
<object id='Number of running processes' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Number of processes in running state.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "proc.num[,,run]" -d "proc.num.run" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='proc.num.run' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Number of processes in running state.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Number of processes in running state.
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (1 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg1]" -d "system.cpu.load.percpu.avg1" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg1' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (15 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg15]" -d "system.cpu.load.percpu.avg15" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg15' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (5 min average per core)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg5]" -d "system.cpu.load.percpu.avg5" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg5' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
The processor load is calculated as system CPU load divided by number of CPU cores.
</property>
</object>
</tomanycont>
</object>
<object id='System uptime' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.uptime" -d "system.uptime" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.uptime' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Total memory' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "vm.memory.size[total]" -d "vm.memory.size.total" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='vm.memory.size.total' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Total swap space' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.swap.size[,total]" -d "system.swap.size.total" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.swap.size.total' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='CPU jumps' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='Context switches per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
009900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Context switches per second_system.cpu.switches
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Interrupts per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
000099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Interrupts per second_system.cpu.intr
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='CPU load' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
2
</property>
<tomanycont id='graphPoints'>
<object id='Processor load (1 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
009900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (1 min average per core)_system.cpu.load.percpu.avg1
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Processor load (15 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property type="string" id="color" mode="w" >
990000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (15 min average per core)_system.cpu.load.percpu.avg15
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Processor load (5 min average per core)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
000099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (5 min average per core)_system.cpu.load.percpu.avg5
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='CPU utilization' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
%
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
100
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='CPU idle time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property type="string" id="color" mode="w" >
009900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU idle time_system.cpu.util.idle
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU iowait time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
999900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU iowait time_system.cpu.util.iowait
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU system time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
990000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU system time_system.cpu.util.system
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='CPU user time' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property type="string" id="color" mode="w" >
000099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPU user time_system.cpu.util.user
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Files and processes and users' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
True
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
5
</property>
<tomanycont id='graphPoints'>
<object id='Maximum number of processes' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Maximum number of processes_kernel.maxproc
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Number of logged in users' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Number of logged in users_system.users.num
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Number of processes' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Number of processes_proc.num
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Number of running processes' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Number of running processes_proc.num.run
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Memory usage' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
B
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
4
</property>
<tomanycont id='graphPoints'>
<object id='Available memory' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
00C800
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Available memory_vm.memory.size.available
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Total memory' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
DD0000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Total memory_vm.memory.size.total
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Swap usage' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
B
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
3
</property>
<tomanycont id='graphPoints'>
<object id='Free swap space' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
00AA00
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Free swap space_system.swap.size.free
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Total swap space' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
AA0000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Total swap space_system.swap.size.total
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='System uptime' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
6
</property>
<tomanycont id='graphPoints'>
<object id='System uptime' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
System uptime_system.uptime
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'rrdTemplates', 'ZabbixOSWindows') -->
<object id='/zport/dmd/Devices/rrdTemplates/ZabbixOSWindows' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='Average disk read queue length' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Full counter name: \PhysicalDisk(_Total)\Avg. Disk Read Queue Length
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "perf_counter[\234(_Total)\1402]" -d "perf_counter.234._Total.1402" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='perf_counter.234._Total.1402' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Full counter name: \PhysicalDisk(_Total)\Avg. Disk Read Queue Length
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Full counter name: \PhysicalDisk(_Total)\Avg. Disk Read Queue Length
</property>
</object>
</tomanycont>
</object>
<object id='Average disk write queue length' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Full counter name: \PhysicalDisk(_Total)\Avg. Disk Write Queue Length
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "perf_counter[\234(_Total)\1404]" -d "perf_counter.234._Total.1404" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='perf_counter.234._Total.1404' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Full counter name: \PhysicalDisk(_Total)\Avg. Disk Write Queue Length
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Full counter name: \PhysicalDisk(_Total)\Avg. Disk Write Queue Length
</property>
</object>
</tomanycont>
</object>
<object id='File read bytes per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Full counter name: \System\File Read Bytes/sec
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "perf_counter[\2\16]" -d "perf_counter.2.16" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='perf_counter.2.16' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Full counter name: \System\File Read Bytes/sec
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Full counter name: \System\File Read Bytes/sec
</property>
</object>
</tomanycont>
</object>
<object id='File write bytes per second' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Full counter name: \System\File Write Bytes/sec
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "perf_counter[\2\18]" -d "perf_counter.2.18" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='perf_counter.2.18' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Full counter name: \System\File Write Bytes/sec
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Full counter name: \System\File Write Bytes/sec
</property>
</object>
</tomanycont>
</object>
<object id='Free memory' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "vm.memory.size[free]" -d "vm.memory.size.free" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='vm.memory.size.free' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Number of processes' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "proc.num[]" -d "proc.num" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='proc.num' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Number of threads' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property id='zendoc' type='string'>
Full counter name: \System\Threads
</property>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "perf_counter[\2\250]" -d "perf_counter.2.250" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='perf_counter.2.250' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property id='zendoc' type='string'>
Full counter name: \System\Threads
</property>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="description" mode="w" >
Full counter name: \System\Threads
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (1 min average)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg1]" -d "system.cpu.load.percpu.avg1" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg1' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (15 min average)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg15]" -d "system.cpu.load.percpu.avg15" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg15' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Processor load (5 min average)' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.cpu.load[percpu,avg5]" -d "system.cpu.load.percpu.avg5" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.cpu.load.percpu.avg5' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='System uptime' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.uptime" -d "system.uptime" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
60
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.uptime' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Total memory' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "vm.memory.size[total]" -d "vm.memory.size.total" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='vm.memory.size.total' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='Total swap space' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.JanGaraj.ZabbixAgent/path}/libexec/zabbix_get_zenoss -s ${device/id} -p ${here/zZabbixPort} -k "system.swap.size[,total]" -d "system.swap.size.total" -c ""
</property>
<property type="int" id="cycletime" mode="w" >
3600
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.JanGaraj.ZabbixAgent.parsers.ZabbixAgentJSON
</property>
<tomanycont id='datapoints'>
<object id='system.swap.size.total' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='CPU load' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='Processor load (1 min average)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
009900
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (1 min average)_system.cpu.load.percpu.avg1
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Processor load (15 min average)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property type="string" id="color" mode="w" >
990000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (15 min average)_system.cpu.load.percpu.avg15
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Processor load (5 min average)' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
000099
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Processor load (5 min average)_system.cpu.load.percpu.avg5
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Disk queue' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='Average disk read queue length' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Average disk read queue length_perf_counter.234._Total.1402
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Average disk write queue length' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Average disk write queue length_perf_counter.234._Total.1404
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='File stat' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
2
</property>
<tomanycont id='graphPoints'>
<object id='File read bytes per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
File read bytes per second_perf_counter.2.16
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='File write bytes per second' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
File write bytes per second_perf_counter.2.18
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Memory usage' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
B
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
4
</property>
<tomanycont id='graphPoints'>
<object id='Free memory' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
00C800
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Free memory_vm.memory.size.free
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Total memory' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
DD0000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Total memory_vm.memory.size.total
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Total swap space' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Total swap space_system.swap.size.total
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Processes' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
3
</property>
<tomanycont id='graphPoints'>
<object id='Number of processes' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Number of processes_proc.num
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Number of threads' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
Number of threads_perf_counter.2.250
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='System uptime' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
5
</property>
<tomanycont id='graphPoints'>
<object id='System uptime' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.0lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
System uptime_system.uptime
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Events', 'Status', 'ZabbixAgent') -->
<object id='/zport/dmd/Events/Status/ZabbixAgent' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
</objects>
